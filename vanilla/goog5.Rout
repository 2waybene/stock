
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(ggplot2)
> 
> require(devEMF)
Loading required package: devEMF
> emf('goog5.emf')
> 
> data <- read.csv("http://www.google.com/finance/historical?q=GOOG&startdate=Aug+19%2C+2004&enddate=Mar+1%2C+2013&output=csv ", sep=",", header=1)
> 
> # reverse data rows
> goog5 = data[nrow(data):1, ]
> 
> print(names(data))
[1] "Date"   "Open"   "High"   "Low"    "Close"  "Volume"
> print(names(data)[c(2,5)])
[1] "Open"  "Close"
> #print(goog5[, c(2, 5)])
> print(as.numeric(goog5[, 2]))
   [1]    2    6   18   19   12   11   16   13    8   10 2070    4    5    3
  [15]    9    7   14   15   17   20   21   22   26   23   24   27   25   28
  [29]   29   30   31   34   33   37   35   38   36   32   41   39   43   40
  [43]   45   44   42   53   65  105   94  106  154  134  153  150  112   92
  [57]   56   60   55   50  100   83   70   48   52   49   47   46   61   63
  [71]   81   85   91   78   80   76   64   54   51   59   58   57   73   69
  [85]   67   92  104   97  109  117  125  124  127  155  148  159  132  142
  [99]  123  140  144  137  143  145  158  160  126  139  113   93   77  114
 [113]  121  136  138  164  162  163  161  147  157  124  107   95  135  141
 [127]  149  151  146  131   96  117  102  119  101  103  108  111  116   98
 [141]   86   82   74   62   66   68   75   77   88   72   85   89   87   84
 [155]   71   90   79  110  118  115  136  129  128  133  130  122   99  120
 [169]  152  156  172  165  168  166  167  170  171  169  174  177  176  175
 [183]  173  178  182  179  180  181  183  184  185  186  188  187  190  189
 [197]  194  215  233  225  213  260  248  218  226  208  206  200  198  207
 [211]  202  229  236  228  240  271  303  289  251  254  245  262  235  258
 [225]  259  249  247  300  281  276  287  301  328  304  288  253  267  263
 [239]  246  230  242  268  256  264  250  244  241  221  216  237  219  220
 [253]  201  210  211  203  205  214  217  212  227  231  222  223  234  221
 [267]  252  261  284  312  311  273  293  280  302  307  320  323  340  333
 [281]  330  305  330  326  341  322  329  332  325  318  299  285  274  264
 [295]  297  292  315  391  382  390  393  416  411  421  452  498  502  541
 [309]  559  554  525  481  561  546  555  567  581  589  574  626  660  693
 [323]  714  687  594  631  657  659  628  607  601  649  647  643  660  667
 [337]  692  725  703  729  721  724  723  686  704  661  676  759  771  811
 [351]  872  860  909  929  859  851  773  787  743  617  734  788  747  730
 [365]  712  718  535  590  552  515  504  441  447  422  396  388  376  389
 [379]  445  434  438  432  474  495  549  442  428  509  493  431  409  412
 [393]  383  375  366  404  399  369  378  402  371  379  443  436  451  490
 [407]  537  533  538  540  621  609  642  615  656  630  625  588  619  644
 [421]  639  780  745  748  701  678  665  663  578  569  558  572  560  563
 [435]  623  587  506  466  468  446  482  455  439  462  475  484  511  480
 [449]  458  457  516  470  471  550  528  547  532  492  539  524  536  542
 [463]  530  543  580  584  612  605  591  620  652  670  674  681  696  682
 [477]  664  675  646  638  597  633  557  595  520  548  513  531  526  500
 [491]  529  514  465  430  487  450  503  508  459  463  450  461  505  523
 [505]  522  478  477  476  464  454  465  491  485  496  494  489  501  486
 [519]  472  479  512  562  596  618  635  651  616  577  599  603  602  608
 [533]  592  600  582  579  598  648  637  689  720  690  707  702  700  672
 [547]  679  671  821  846  943  949 1028 1002  938  952  957  879  918  931
 [561]  946  903  944  932  939  974 1061 1070 1060 1087 1076 1155 1119 1103
 [575]  982 1063 1006 1018  994 1026 1023 1041  984 1012 1001 1010  970  992
 [589]  990  838  901  857  815  810  828  877  844  867  892  990 1029 1015
 [603] 1007 1080 1105 1132 1114 1066 1032 1057  977 1008 1102 1048 1085 1062
 [617] 1075 1125  991  950  883  934  882  912  831  824  828  867  849  888
 [631]  899  956  942  925  801  785  755  764  737  775  847  825  819  793
 [645]  784  757  778  769  758  770  767  804  836  830  853  841  862  844
 [659]  818  855  916  910  926  876  868  854  886  887  933  908  936 1045
 [673]  968  955  966  953  967  959  917  890  871  902  916  869  870  875
 [687]  840  865  842  843  920  915  897  927  978  941  963 1013 1009 1098
 [701] 1102 1084 1145 1188 1204 1180 1170 1137 1130 1121 1135 1126 1169 1190
 [715] 1156 1182 1258 1280 1228 1226 1235 1232 1269 1305 1340 1346 1350 1349
 [729] 1364 1377 1388 1403 1401 1399 1159 1198 1142 1191 1138 1136 1165 1208
 [743] 1153 1167 1151 1113 1145 1200 1212 1152 1201 1178 1140 1053 1081 1110
 [757] 1088 1149 1179 1162 1173 1158 1133 1161 1166 1175 1220 1261 1195 1213
 [771] 1192 1211 1223 1218 1241 1240 1329 1370 1410 1422 1439 1474 1480 1454
 [785] 1472 1543 1566 1558 1574 1628 1753 1788 1842 1803 1852 1772 1833 1847
 [799] 1891 1856 1899 1917 1935 1920 1933 1932 1978 1981 1995 1986 2023 2025
 [813] 2018 1929 1894 1872 1919 1854 1844 1828 1849 1870 1913 1940 1925 1942
 [827] 1959 1996 1960 1934 1963 1970 2000 2002 2008 1998 1969 1953 1956 1922
 [841] 1923 1950 1971 1967 1974 1987 1983 1973 1964 1947 1937 1890 1888 1832
 [855] 1874 1868 1884 1877 1827 1784 1707 1429 1421 1416 1603 1478 1420 1382
 [869] 1326 1255 1141 1037 1157 1079 1143 1210 1219 1216 1322 1252 1297 1117
 [883] 1163 1107 1124  835  829  905  913  911  786  765  776  710  709  691
 [897]  750  726  756  705  711  752  699  740  814  794  771  774  732  777
 [911]  900  839  812  947  928  895  863  856  813  820  761  805 1301 1330
 [925] 1315 1415 1392 1381 1365 1390 1430 1519 1647 1649 1600 1594 1564 1523
 [939] 1493 1565 1569 1523 1535 1522 1492 1521 1394 1369 1356 1460 1494 1545
 [953] 1540 1511 1449 1514 1525 1463 1384 1409 1380 1426 1452 1507 1442 1405
 [967] 1412 1361 1359 1357 1351 1247 1277 1203 1309 1268 1344 1366 1389 1358
 [981] 1308 1325 1181 1171 1292 1086  979  874  983 1077 1020 1054  960 1016
 [995]  937  922  884  880  954  985  969 1056 1106 1104 1082 1129 1147 1042
[1009] 1067  993 1050 1019  997  930  921  898  945  891  828  768  791  680
[1023]  688  624  716  684  694  741  677  832  797  728  717  744  706  669
[1037]  565  641  634  571  460  456  354  385  324  413  551  410  358  483
[1051]  488  453  417  408  349  365  370  433  440  414  419  407  423  372
[1065]  361  351  310  286  243  291  290  283  255  199  191  193  192  209
[1079]    1  239  224  195  196  204  197  238  266  313  295  257  327  331
[1093]  339  336  319  308  278  282    1  294  277  279  296    1  309  343
[1107]  360  352  338  350  334  321  316  265  298  272  232  269  314  345
[1121]  348  367  386  387  364  381  373  374  415  448  467  420  406  424
[1135]  395  398  418  368  397  356  377  392  359  362  353  344  335  306
[1149]  275  270  317  337  347  346  342  365  357  355  363  394  403  405
[1163]  401  380  400  384  426  429  435  425  427  444    1  449  473  437
[1177]  497  518  521  469  499  527  519  510  507  517  564  558  573  575
[1191]  613  593  586  585  636  553  534  544  556  566  583  568  570  545
[1205]  604  627  640  666  697  695  731  762  746  742  735  722  698  673
[1219]  668  655  653  662  658  611  629  614  645  695  684  685  650    1
[1233]  610  622  576  606  632  654  683  713  736  727  715  719  706  708
[1247]  733  772  751  738  754  782  779  781  808  798  806  802  796  803
[1261]  845  848  789  763  749  790  866  878  895  924  889  896  827  826
[1275]  807  807  816  858  822  873  904  906  940  964 1046 1078 1030 1100
[1289] 1099 1097 1064 1068 1092 1096 1059  999 1027 1051 1089 1202 1187 1221
[1303] 1224 1276 1288 1372 1397 1393 1385 1386 1404 1407 1391 1376 1347 1386
[1317] 1311 1265 1338 1348 1375 1406 1432 1475 1470 1466 1497 1495 1512 1489
[1331] 1469 1510 1540 1568    1 1483 1533 1582 1599 1588 1614 1550 1546 1578
[1345] 1595 1627 1631 1617 1650 1635 1633 1642 1663 1671 1740    1 1789 1807
[1359] 1773 1808    1 1817 1818 1812 1716 1605 1679 1644 1510 1548 1602    1
[1373] 1536 1561 1544 1441 1368 1316 1341 1353 1324 1295 1298 1255 1310 1254
[1387] 1278 1331 1291 1275 1283    1 1313 1343 1314 1339 1373 1346 1293 1242
[1401] 1244 1260 1303 1345 1367 1424 1445 1418 1438 1490 1583 1453 1428 1464
[1415] 1444 1451 1408 1413 1362 1417 1448 1436 1434 1446 1479    1 1477 1468
[1429] 1456 1437 1461 1458 1486 1592 1606 1436 1379 1402 1411 1395 1371 1357
[1443] 1257 1274 1284 1270 1239 1240 1101 1139 1095 1168 1177 1160 1183 1146
[1457] 1128 1150 1073 1014  893  975  885  987 1011 1058    1  972 1021 1071
[1471] 1093 1090 1031 1025  971  990 1065  995 1072 1115 1111 1094 1039 1022
[1485]  962  948  923  852  799  766  753    1  760  739  795  914  919  989
[1499] 1038 1052  894  833  834 1004  996  976 1036 1047 1069 1017  961 1034
[1513] 1044 1055 1123 1122 1108 1109 1083 1003 1035  998 1033 1043  981  881
[1527]  837  817  783  809  792  823  784  800  850  907    1  861  864  951
[1541]  958  980  986  965  965 1000 1057 1144 1164 1174 1214 1256 1286 1248
[1555] 1259 1264 1227 1253 1328 1307 1281 1323 1334 1370 1352 1651 1658 1712
[1569] 1703 1732 1735 1754 1743 1756 1781 1762 1755 1775 1765 1806 1800 1804
[1583] 1830 1794 1779 1748 1670 1609 1557 1587 1638 1577 1573 1575 1596 1589
[1597] 1491 1436 1465 1467 1532 1601 1604 1620 1616 1640 1639 1623 1610 1600
[1611] 1626 1648 1675 1683 1668 1666 1665 1643 1637 1636 1687 1655 1727 1757
[1625] 1749 1766 1778 1760 1764 1814 1866 1839 1858 1698 1704 1782 1768 1777
[1639] 1672 1680 1729 1717 1722 1723 1750 1759 1747 1746 1801 1819 1811 1787
[1653] 1813 1780 1724 1731 1734 1719 1767 1653 1692 1706 1658 1612 1600 1560
[1667] 1518 1487 1414 1462 1440 1443 1473 1515 1498 1559 1571 1539 1504 1551
[1681] 1542 1586 1613 1534 1485 1502 1553 1505 1497 1501 1498 1360 1238 1263
[1695] 1234 1245 1230 1240 1317 1318 1332 1363 1312 1300 1290 1319 1299 1332
[1709] 1335 1302 1296 1237 1176 1262 1280 1272 1186 1209 1193 1194 1197 1228
[1723] 1249 1246 1215 1233 1217 1184 1206 1172 1150 1134 1120 1112 1126 1013
[1737] 1024 1049  988  973  935 1005 1076 1105 1127 1231 1287 1339 1282 1251
[1751] 1250 1310 1327 1641 1608 1634 1667 1621 1685 1744 1771 1763 1682 1676
[1765] 1730 1691 1622 1624 1541 1435 1422 1425 1400 1469 1398 1396 1333 1222
[1779] 1091 1118 1116 1199 1266 1205 1294 1320 1354 1337 1225 1154 1267 1289
[1793] 1271 1196 1273 1279 1304 1355 1336 1383 1374 1236 1185 1243 1321 1342
[1807] 1306 1207 1148 1040 1074 1131 1189 1229 1285 1378 1387 1652 1547 1531
[1821] 1576 1538 1590 1570 1615 1591 1646 1625 1630 1530 1554 1572 1619 1618
[1835] 1713 1678 1690 1662 1701 1739 1738 1721 1665 1580 1528 1499 1447 1524
[1849] 1581 1642 1654 1761 1820 1797 1790 1786 1770 1792 1826 1791 1796 1805
[1863] 1823 1822 1831 1821 1837 1838 1869 1863 1865 1887 1905 1900 1895 1878
[1877] 1829 1802 1835 1815 1836 1816 1862 1597 1562 1567 1516 1482 1476 1517
[1891] 1542 1555 1552 1598 1629 1696 1709 1737 1699 1726 1733 1740 1669 1681
[1905] 1674 1736 1695 1697 1693 1719 1774 1795 1793 1783 1702 1714 1720 1700
[1919] 1654 1710 1751 1758 1785 1799 1834 1846 1853 1879 1873 1880 1886 1889
[1933] 1885 1861 1875 1851 1840 1825 1841 1845 1867 1882 1798 1708 1702 1688
[1947] 1677 1611 1645 1675 1728 1752 1742 1673 1661 1718 1689 1628 1686 1694
[1961] 1741 1725 1659 1684 1769 1843 1809 1657 1745 1664 1715 1660 1632 1584
[1975] 1585 1481 1473 1500 1509 1579 1503 1549 1471 1427 1423 1419 1431 1488
[1989] 1526 1527 1461 1457 1433 1459 1450 1496 1537 1529 1586 1607 1556 1593
[2003] 1506 1455 1484 1508 1520 1513 1563 1711 1656 1751 1705 1751 1776 1848
[2017] 1824 1850 1810 1860 1859 1864 1857 1871 1855 1881 1896 1915 1908 1921
[2031] 1927 1918 1907 1924 1928 1901 1904 1931 1944 1943 1946 1939 1951 1977
[2045] 1993 1972 1957 1965 1992 1991 1989 2004 2012 2016 2015 2039 2033 2048
[2059] 2041 2045 2052 2043 2051 2055 2049 2047 2027 2038 2037 2028 2024 2031
[2073] 2042 1985 1941 1916 1952 1939 1930 1938 1936 1966 1945 1949 1926 1914
[2087] 1892 1903 1902 1898 1883 1876 1893 1911 1910 1912 1906 1897 1909 1955
[2101] 1961 1980 1968 1962 1954 1968 1948 1958 1976 2001 1975 1984 2003 2009
[2115] 2011 1997 1999 1990 1988 1979 1977 2007 2013 2014 2019 2020 2017 2030
[2129] 2029 2022 2006 2010 2005 1994 1982 2021 2026 2035 2036 2032 2040 2034
[2143] 2044 2053 2050 2046 2054 2058 2056 2059 2058 2057 2060 2063 2069 2065
[2157] 2066 2068 2062 2061 2067 2064
> #print(goog5)
> 
> write.csv(goog5, file = "goog5.csv")
> write.table(goog5, file = "goog5.tab")
> 
> #axis = (1, lab = aapl[2])
> #axis = (2, aapl[2])
> #box()
> 
> # open value
> #plot(aapl[,1], aapl[,5], xlab = "TIME", ylab = "PRICE ($)", type = "l", col="blue")
> #plot(as.numeric(goog5[,2]), xlab = "DAY", ylab = "STOCK VALUE ($)", lty = 1, col="blue")
> #plot(data[,2], xlab = "DAY", ylab = "STOCK VALUE ($)", type = "l", col="blue")
> plot(goog5[,5], xlab = "DAY", ylab = "STOCK VALUE ($)", type = "l", col="blue")
> #plot(as.numeric(goog5[,2]), xlab = "DAY", ylab = "STOCK VALUE ($)", type = "l", col="blue")
> 
> # close value
> #lines(as.numeric(goog5[,5]), col="red")
> #lines(goog5[,5], col="red")
> lines(goog5[,5], type = "l", col="red")
> #lines(goog5[,3], type = "l", col="green")
> 
> #legend("topleft", names(data)[c(2,5)], fill = heat.colors(2))
> #legend("topleft", names(data)[c(2,3,5)], lty = 1:3, col = c('blue', 'red', 'green'))
> legend("topleft", names(data)[c(2,5)], lty = 1:2, col = c('blue', 'red'))
> #legend("topleft", names(data)[c(2,5)], lty = 1, col = c('red', 'blue'))
> 
> #matplot(aapl[,1], aapl[,5], type = "l", col="red")
> #plot(aapl[c(1:40), 1], aapl[c(1:40),5], xlab = "TIME", ylab = "PRICE ($)", type = "l", col="blue")
> #plot(aapl[c(1:40),5], xlab = "TIME", ylab = "PRICE ($)", type = "l", col="blue")
> 
> # simple example
> #x <- c(1,3,6,9,12)
> #y <- c(1.5,2,7,8,15)
> #plot(x,y, pch=15, col="blue")
> 
> # Example 2. Draw a plot, set a bunch of parameters.
> #plot(x,y, xlab="x axis", ylab="y axis", main="my plot", ylim=c(0,20), xlim=c(0,20), pch=15, col="blue")
> # fit a line to the points
> #myline.fit <- lm(y ~ x)
> 
> # get information about the fit
> #summary(myline.fit)
> 
> # draw the fit line on the plot
> #abline(myline.fit)
> 
> # add some more points to the graph
> #x2 <- c(0.5, 3, 5, 8, 12)
> #y2 <- c(0.8, 1, 2, 4, 6)
> 
> #points(x2, y2, pch=16, col="green")
> 
> # header = TRUE ignores the first line, check.names = FALSE allows '+' in 'C++'
> #benchmark <- read.table("", header = TRUE, row.names = "vwnd", check.names = FALSE)
> 
> # 't()' is matrix tranposition, 'beside = TRUE' separates the benchmarks, 'heat' provides nice colors
> #barplot(t(as.matrix(benchmark)), beside = TRUE, col = heat.colors(6))
> #barplot(t(as.matrix(benchmark)), beside = TRUE, col = heat.colors(6), xlab = "DAY", ylab = "STOCK VALUE ($)")
> 
> # 'cex' stands for 'character expansion', 'bty' for 'box type' (we don't want borders)
> #legend("topright", names(benchmark), cex = 0.9, bty = "n", fill = heat.colors(6))
> 
> 
> proc.time()
   user  system elapsed 
  1.153   0.050   1.576 
